import java.util.Scanner;

/*
 * Calculate the detour distance between two different rides. Given four latitude / longitude pairs, 
 * where driver one is traveling from point A to point B and driver two is traveling from point C to 
 * point D, write a function (in your language of choice) to calculate the shorter of the detour distances 
 * the drivers would need to take to pick-up and drop-off the other driver.
 * */
public class CalDetour {

	public static void main(String args[]){
		Scanner in = new Scanner(System.in);
		System.out.println("Enter Point A corrdinates: (lat, long)");
		Double pointA_x = in.nextDouble();
		Double pointA_y = in.nextDouble();
		
		System.out.println("Enter Point B corrdinates: (lat, long)");
		Double pointB_x = in.nextDouble();
		Double pointB_y = in.nextDouble();
		
		System.out.println("Enter Point C corrdinates: (lat, long)");
		Double pointC_x = in.nextDouble();
		Double pointC_y = in.nextDouble();
		
		System.out.println("Enter Point D corrdinates: (lat, long)");
		Double pointD_x = in.nextDouble();
		Double pointD_y = in.nextDouble();


	}
	
	public static double distance(double lat1, double lat2, double lon1,
	        double lon2, double el1, double el2) {

	    final int R = 6371; // Radius of the earth

	    Double latDistance = Math.toRadians(lat2 - lat1);
	    Double lonDistance = Math.toRadians(lon2 - lon1);
	    Double a = Math.sin(latDistance / 2) * Math.sin(latDistance / 2)
	            + Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2))
	            * Math.sin(lonDistance / 2) * Math.sin(lonDistance / 2);
	    Double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
	    double distance = R * c * 1000; // convert to meters

	    double height = el1 - el2;

	    distance = Math.pow(distance, 2) + Math.pow(height, 2);

	    return Math.sqrt(distance);
	}
	
}
